<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9315e6fc-c61b-41d7-9f72-aed8e9b8cf3b" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2uRw72ciOa0PKqXL6Tey0pifkqx" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;Jest.Error Handling.should work.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Getter setter.should can be create class.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Inheritance.should can be create inheritance.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Interface.should support interface.executor&quot;: &quot;Run&quot;,
    &quot;Jest.NameSapce.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Operator Instance Of.should have problem using typeof (1).executor&quot;: &quot;Run&quot;,
    &quot;Jest.Operator Instance Of.should have problem using typeof.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Operator Instance Of.should no problem using instance of.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Overriding.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Overriding.should support overriding (1).executor&quot;: &quot;Run&quot;,
    &quot;Jest.Overriding.should support overriding.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Parameter Properties.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Polymorphism.should suport method polymorphism.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Polymorphism.should work.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Static.should work on method too.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Static.should work.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Super Constructor.should support super constructor.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Visibility.should support visibility (private, public, protected).executor&quot;: &quot;Run&quot;,
    &quot;Jest.abstract class.should work.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Suli File/Kuliah/Github/TypeScript/OOP/test&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;C:/Suli File/Kuliah/Github/TypeScript/OOP/node_modules/jest&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;C:\\Suli File\\Kuliah\\Github\\TypeScript\\OOP\\node_modules\\prettier&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;,
    &quot;ts.external.directory.path&quot;: &quot;C:\\Suli File\\Kuliah\\Github\\TypeScript\\OOP\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Suli File\Kuliah\Github\TypeScript\OOP\test" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.NameSapce">
    <configuration name="Error Handling.should work" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/errorhandling.test.ts" />
      <test-names>
        <test-name value="Error Handling" />
        <test-name value="should work" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="NameSapce" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/test/namespace.test.ts" />
      <test-names>
        <test-name value="NameSapce" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Static.should work on method too" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/static.test.ts" />
      <test-names>
        <test-name value="Static" />
        <test-name value="should work on method too" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Static.should work" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/static.test.ts" />
      <test-names>
        <test-name value="Static" />
        <test-name value="should work" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="abstract class.should work" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/abstract.test.ts" />
      <test-names>
        <test-name value="abstract class" />
        <test-name value="should work" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.NameSapce" />
        <item itemvalue="Jest.Error Handling.should work" />
        <item itemvalue="Jest.Static.should work on method too" />
        <item itemvalue="Jest.Static.should work" />
        <item itemvalue="Jest.abstract class.should work" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-WS-243.26053.12" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9315e6fc-c61b-41d7-9f72-aed8e9b8cf3b" name="Changes" comment="" />
      <created>1742224525271</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1742224525271</updated>
      <workItem from="1742224526903" duration="123000" />
      <workItem from="1742307371831" duration="121000" />
      <workItem from="1742559753220" duration="99000" />
      <workItem from="1742559874164" duration="632000" />
      <workItem from="1742619092614" duration="7127000" />
      <workItem from="1742961862865" duration="2000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/test/super-constructor.test.ts</url>
          <line>18</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>